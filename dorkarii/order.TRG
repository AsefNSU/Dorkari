TYPE=TRIGGERS
triggers='CREATE DEFINER=`root`@`localhost` TRIGGER calculate_order_cost\nBEFORE INSERT ON `Order`\nFOR EACH ROW\nBEGIN\n    DECLARE food_price DECIMAL(10,2);\n    \n    -- Get food price from Food table\n    SELECT food_price INTO food_price FROM Food WHERE food_name = NEW.food_name LIMIT 1;\n    \n    -- Update order cost based on quantity\n    SET NEW.order_cost = food_price * NEW.food_qty_same;\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER increment_food_qty\nBEFORE INSERT ON `Order`\nFOR EACH ROW\nBEGIN\n    DECLARE existing_qty INT;\n\n    -- Check if food_name already exists in the same order\n    SELECT food_qty_same INTO existing_qty FROM `Order`\n    WHERE order_id = NEW.order_id AND food_name = NEW.food_name LIMIT 1;\n\n    -- If exists, increment quantity; else, default to 1\n    IF existing_qty IS NOT NULL THEN\n        SET NEW.food_qty_same = existing_qty + 1;\n    ELSE\n        SET NEW.food_qty_same = 1;\n    END IF;\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER generate_order_id\nBEFORE INSERT ON `Order`\nFOR EACH ROW\nBEGIN\n    DECLARE order_serial INT;\n\n    -- Get the serial number for the given order_date\n    SELECT COUNT(*) + 1 INTO order_serial\n    FROM `Order`\n    WHERE order_date = NEW.order_date;\n\n    -- Generate order_id by concatenating order_serial, shortened order_date (YYMMDD), and first 6 digits of customer_id\n    SET NEW.order_id = CONCAT(\n        LPAD(order_serial, 4, \'0\'),             -- 4 digits for serial, e.g. 0001, 0002\n        DATE_FORMAT(NEW.order_date, \'%y%m%d\'),   -- Shortened order_date as YYMMDD\n        LEFT(NEW.customer_id, 6)                 -- First 6 digits of customer_id\n    );\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER update_food_qty_order\nAFTER INSERT ON `Order`\nFOR EACH ROW\nBEGIN\n    UPDATE `Order`\n    SET food_qty_order = (\n        SELECT SUM(food_qty_same) FROM `Order` WHERE order_id = NEW.order_id\n    )\n    WHERE order_id = NEW.order_id;\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER update_total_items_sold\nAFTER INSERT ON `Order`\nFOR EACH ROW\nBEGIN\n    -- Update total_items_sold_day\n    UPDATE Branch\n    SET total_items_sold_day = (\n        SELECT SUM(food_qty_order)\n        FROM `Order`\n        WHERE order_date = NEW.order_date AND branch_id = NEW.branch_id\n    )\n    WHERE branch_id = NEW.branch_id;\n\n    -- Update total_items_sold_month\n    UPDATE Branch\n    SET total_items_sold_month = (\n        SELECT SUM(food_qty_order)\n        FROM `Order`\n        WHERE MONTH(order_date) = MONTH(NEW.order_date)\n        AND YEAR(order_date) = YEAR(NEW.order_date)\n        AND branch_id = NEW.branch_id\n    )\n    WHERE branch_id = NEW.branch_id;\nEND' 'CREATE DEFINER=`root`@`localhost` TRIGGER update_total_sale\nAFTER INSERT ON `Order`\nFOR EACH ROW\nBEGIN\n    -- Update total_sale_day\n    UPDATE Branch\n    SET total_sale_day = (\n        SELECT SUM(order_cost)\n        FROM `Order`\n        WHERE order_date = NEW.order_date AND branch_id = NEW.branch_id\n    )\n    WHERE branch_id = NEW.branch_id;\n\n    -- Update total_sale_month\n    UPDATE Branch\n    SET total_sale_month = (\n        SELECT SUM(order_cost)\n        FROM `Order`\n        WHERE MONTH(order_date) = MONTH(NEW.order_date)\n        AND YEAR(order_date) = YEAR(NEW.order_date)\n        AND branch_id = NEW.branch_id\n    )\n    WHERE branch_id = NEW.branch_id;\nEND'
sql_modes=1098907648 1098907648 1098907648 1098907648 1098907648 1098907648
definers='root@localhost' 'root@localhost' 'root@localhost' 'root@localhost' 'root@localhost' 'root@localhost'
client_cs_names='utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4'
connection_cl_names='utf8mb4_unicode_ci' 'utf8mb4_unicode_ci' 'utf8mb4_unicode_ci' 'utf8mb4_unicode_ci' 'utf8mb4_unicode_ci' 'utf8mb4_unicode_ci'
db_cl_names='utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci'
created=1741973266859101 1741973274591272 1741980154170467 1741973281289696 1741973943994304 1741973952046897
